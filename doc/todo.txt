------------------------
In-World (non-edit) Link management
 + grab a viewed object/region's link, or any object/region's link
 - grab rules/materials links off an object/region
 - grab links from remote site lists
 + first cut: last link grabbed=holding
 - into link chooser, organised by type for context, sorted by recent, select->holding
 - choice of material blocks to hold/place along bottom, variant of generic link chooser
 + request add/rem link at location relative to object/region
 - request add/rem links for rules and materials on any object/region: add to list at N, remove Nth in list
 - request add/rem links in global rules
 - operations: grab/add/rem/cut
 + local or remote user, Java animates user and notifies target or its within
 + minecraft: left on block=hitting xyz; left on entity=hitting URL; right on block=placing xyz; right on entity=touching URL
 + add: interacting by multitouch: Cyrus sees I'm holding this link, interacting with this target
    + bottom left is moving and multitouch while moving, top left is multitouch for standing still
    * coords touched on an object: object has to work out what displacement to add, or to pass to its within
    + if beyond current region, touch white grid
    - posn implied by touching a neighbour if voxels
    - ultimately ability to add a block of type defined somewhere else - may need to clone with its links
 + rem: hitting by touch with holding nothing or a tool: link and position on 'within' object/region
    + send user hit action to linker of object/region - the within of the user
 * { is: user holding: <link to object/region>, touching: { on: <target link> coords: 7 within: <holder of> position: <coords in holder> } }
 - { is: user holding: <link to ruleset/texture/shader/sound> (un-)animating/texturing/shading/sounding:  }
 - touching: get coords and uid of within if a shared link - shared if no within or within not here, notify within not shared object
 - type of ruleset/shader by is:
 - type of texture/sound by extension (ug - and ug everywhere), or fetch/inspect, or came from there, or explicit GUI choice
 + separate { sub-objects: .. places: .. users: .. } (cubes:, entities:, structures: in MC)
    + placing object -> sub-objects: .. joining region -> places: .. presence track -> users:
 + Java finds nearest place - User automatically set 'within' nearest enclosing region (can only be within: places: objects)
 + Cyrus presence tracker: effectively user requests by within to add/rem link to it in users: of target region at current position
 * Cyrus rule: user then requests to add/rem other links; OK if present, calculate displacement
 - request to set global rules on a site object/region
------------------------
 * multitouch a region { is: user holding: <link to fixed region>, touching: { on: <target link> coords: 7 within: <holder of> position: <coords in holder> } }
 * Cyrus region rule on target detects user request and if user present, adds adjacent region with displacement off that coords
    * OM: ( 2 3 4 ) * ( 4 3 2 ) => ( 8 9 8 )
 * user holding an object, touching; target adds link to object at coord:
   (a) place - point touched
   (b) object - point touched (relative to object coords)
   (c) voxel - within notified with voxel coords and voxel-relative touched coords
   (d) linked/shared object - within notified with object coords and object-rel touched coords
   (e) linked place - notify current place within to remove, etc
 * so fixed link to a cube, hit place, gets added there
------------------------
World Basics
 - blue sky; ambient light; day/night - region object: { night/day }
 - blank white grid is your region, can add stuff or link blocks in-world
 - { is: voxels  chunks: uid-y uid-z } using existing cubes; same one linked?
 - physics pulling you down; collision with blocks; vertical movement of avatar
 - copy minecraft navigation controls
------------------------
In-World Editing
 - edit by toggling edit button and touching target
    - edit forces correct syntax and has undo
    - on tablet, split edit/view
    - edit params and properties of objects, edit animation rules
------------------------
More stuff:
 - make sure MC-like Web page functions work still - global rules, tutorial, editing
 - bug: presence detector picks up form submissions and swipes (fix blue bot)
 - bug: avatar still visible
 - fix: compress cyrus.db
 - fix: doc/local/contentList.txt search for potential single-element lists
 - fix: doc/local/contentAPIeval.txt evaluate() or evaluatable()? see trace
 - fix: lighting: boxes not lit well by blue bot, etc
 - ---
 - later generate room; editable
 - add world edit stuff later, by Cyrus rules probably
 - textures 1=all, 2=top/bottom+sides 3=top, bottom, sides, 4=top, bottom, opposite sides
------------------------
