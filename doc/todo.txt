------------------------
------------------------
 + render a mini icon version of what you're holding in the bottom right of the screen
------------------------
Adding links to non-owned objects/places
 + First container within* to user within* gets touch event with relative displacement.
   So can add locally by touching neighbour you don't own
 + { is: user holding: .. touching: { item: .. position: .. within: { item: .. position: .. } } }
 + shared link: if no within or within not here
    + notify linker in scene graph, not shared object: keep track of structure when building scene
 + target adds link to object at coord:
   (a) place - point touched
   (b) object - point touched (relative to object coords)
   (c) voxel - within notified with voxel coords and voxel-relative touched coords
   (d) linked/shared object - within notified with object coords and object-rel touched coords
   (e) linked place - notify current place within to remove, etc
------------------------
Linked Augmented Reality
 + ability to take starting point from QR code by indicating starting view point in object
 - markers to reset position - other reference view points in object scene graph
 - lock in to GPS if within BB or margin around - add attribute for GPS of corner of BB
 + pan/tilt from accel, etc
 - camera background
------------------------
------------------------
 + add placing rules to all places
 + check for scene graph loops in render (link+within 10% of bbox)
 + make sure not already there in rule (link + inside position + bbox/scale)
 # doesn't always work: objects and places
------------------------
 + only allow placing if user present (target=place=within or same within as this target)
 + reduce 8 placing rules to 1
------------------------
------------------------
In-World (non-edit) Link management
 - show link holding as texture for icon
 - object edit to see links - "everything has a link"
 + grab a viewed object/region's link, or any object/region's link
 - grab rules/materials links off an object/region
 - grab links from remote site lists
 + first cut: last link grabbed=holding
 - into link chooser, organised by type for context, sorted by recent, select->holding
 - choice of material blocks to hold/place along bottom, variant of generic link chooser
 + request add/rem link at location relative to object/region
 - request add/rem links for rules and materials on any object/region: add to list at N, remove Nth in list
 - request add/rem links in global rules
 - operations: grab/add/rem/cut
 + local or remote user, Java animates user and notifies target or its within
 + minecraft: left on block=hitting xyz; left on entity=hitting URL; right on block=placing xyz; right on entity=touching URL
 + add: Cyrus sees I'm holding this link, interacting with this target
    - coords touched on an object: object has to work out what displacement to add, or to pass to its within
    + if beyond current region, touch white grid
    - posn implied by touching a neighbour if voxels
    - ultimately ability to add a block of type defined somewhere else - may need to clone with its links
 + rem: hitting by touch with holding nothing or a tool: link and position on 'within' object/region
    + send user hit action to linker of object/region - the within of the user
 - { is: user holding: <link to object/region>, touching: { on: <target link> coords: 7 within: <holder of> position: <coords in holder> } }
 - { is: user holding: <link to ruleset/texture/shader/sound> (un-)animating/texturing/shading/sounding:  }
 - type of ruleset/shader by is:
 - type of texture/sound by extension (ug - and ug everywhere), or fetch/inspect, or came from there, or explicit GUI choice
 + separate { sub-objects: .. places: .. users: .. } (cubes:, entities:, structures: in MC)
    + placing object -> sub-objects: .. joining region -> places: .. presence track -> users:
 + Java finds nearest place - User automatically set 'within' nearest enclosing region (can only be within: places: objects)
 + Cyrus presence tracker: effectively user requests by within to add/rem link to it in users: of target region at current position
 + Cyrus rule: user then requests to add/rem other links; OK if present, calculate displacement
 - request to set global rules on a site object/region
 + copy-on-write - replace link with link to clone on edit
------------------------
------------------------
World Basics
 - region object: { night/day }
 - blank white grid is your region, can add stuff or link blocks in-world
 - { is: voxels  chunks: uid-y uid-z } using existing cubes; same one linked?
 - physics pulling you down; collision with blocks; vertical movement of avatar
 - copy minecraft navigation controls; velocity and look up/down and both together (touch on release if in that quadrant and not moved)
------------------------
More stuff:
 # mystery adding users bug - rotation?
 # bug: presence detector picks up form submissions and swipes (fix blue bot)
 # bug: avatar still visible
 # fix: compress cyrus.db
 # loss of list structure when round-tripped to web (e.g. MC tutorial, Rob's place)
 # fix: doc/local/contentList.txt search for potential single-element lists
 # fix: doc/local/contentAPIeval.txt evaluate() or evaluatable()? see trace
 # fix: lighting: boxes not lit well by blue bot, etc
 # fix: sanitising notifiable uids - strip at source, leaks info
 # fix: above also may have highlighted too much traffic
 # fix: add * to / for vector/scalar
 - make sure MC-like Web page functions work still - global rules, tutorial, editing
 - ---
 - later generate room; editable
 - add world edit stuff later, by Cyrus rules probably
 - textures 1=all, 2=top/bottom+sides 3=top, bottom, sides, 4=top, bottom, opposite sides
------------------------
 + OM tests: { is: !place } should fail due to not matching { .. } Alerted:holding:is returns null, matches !place ? test with uid-not-here
 + transient Alerted no good - even if it did allow you to see through a link in it - cos link may need cacheing
 + what if a /rule/ isn't cached and you get an Alerted? it'll be missed, presumably
 + prevent access to Alerted fields - @Alerted:<path>
 + do presence detect in Cyrus as part of fixing user Alerted when placing
------------------------
Watch for case where you link to something apparently static and they switch the within
to you and become active and trash your world..
------------------------
For some 3D objects, interacting may jump you to another object, eg 2D form, 3D place or
object, or even to the object itself. Then can allow params to be adjusted in a GUI for
3D object, etc.
------------------------
In-World Editing
 - remove all current in-3D edit crap
 - edit forces correct syntax and has undo
 - on tablet, split edit/view
 - edit params and properties of objects, edit animation rules
------------------------
