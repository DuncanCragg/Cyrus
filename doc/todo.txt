
To Do
-----

--------------------------------------------------------
 - cyrus.js tutorials and demos
 - doc/local/demodb.json; src/server/vm?/test.db
 - tutorial as a set of test cases on language
--------------------------------------------------------
 - have @ =>, so implement => @
 - implement as-is so it only runs once copying not evalling when nested (and/or make sure nesting doesn't mean multiple copies)
 - Notifying not Notify; Observing not Observe?
--------------------------------------------------------
 - new dibdab for replacing parent (temporarily in view)
 - new dibdab for raw view
 - remember open and parent replace state
 - fix:
    - <pre> and <p> thing
    - height/scroll thing
    - Firefox
--------------------------------------------------------
 - change 'gui' to 'layout' or '2d place': notice is what?
 - 204 detection so not error and delay
 - something with my blog feed for the link bit
 - bug with false matching too eagerly
 - 'maybe' in 3d game, CAP, Reaktion?
--------------------------------------------------------


--------------------------------------------------------
 - room demo
 - productionise on-device programming
 - productionise distributed system
--------------------------------------------------------
Separate out P3/home 3D/kids/teaching programming
from         P2/work 2D/Rules/EUP/Languages/FP/Prototyping(APIs/Mobile)
.. site is more 3 than 2
--------------------------------------------------------


--------------------------------------------------------
room demo
 - -----------------------------------------------------
 - on-device, controlled
 - get some early feedback and ideas
 - -----------------------------------------------------
 - items there:
    - game
    - linked objects and worlds
    - lights that change when you swipe them
    - rover roving
 - items to add:
    - snow globe: first sphere mesh
    - cylinder - for light poles
    - crystal, transparent, glinting the light
    - blended transparent, simple colour vert interpolated cubes, etc
    - curved shape from android tutorial made into flower
    - lights come on when you enter that part of map
    - sound when you go close - proportional by distance and inverse-square
    - accelerometer-based interactions and games like teeter - pick up a wooden toy
 - -----------------------------------------------------
 - Minecraft: pick up/put down interaction as part of normal object interaction/behaviour
    - swipe-to-move as example already there
    - duplicate, delete, move, link
--------------------------------------------------------


--------------------------------------------------------
Productionise on-device programming
 - -----------------------------------------------------
 - lifecycle:
    - restartable, pausable, etc
    - remember history in user
 - tracking rule firing:
    - resource limits: time to do a rule; preventing rewrite mayhem
    - toast when reached loop limit
    - log of fired rules: turn on toasty output?
 - unclosed braces and parens are syntax errors too
 - bugs in CyrusLang:
    - list things, @. + @.,
    - recursion issue doc/local/traces.txt, etc
    - doesn't always reach loop limit when should do
 - IDE:
    - copyable uid link at bottom of raw
 - resource usage:
    - check fewer db writes means less disk, less w.toString
    - other performance tracing
    - memory allocations
 - naming:
    - scale->size and the rest
    - CyrusItems not WebObjects
    - netmash.keystore; om.db
--------------------------------------------------------
 - pre-prepared meshes: room, sphere, cylinder
 - swipe actions: rotate, open/close, scroll thru gallery of pix
 - phong or matte shaders
 - links to 2D guis in 3D world - touch to jump - or have text of gui at least
 - look up and down swiping side
 - faint bars for bottom and side
 - -----------------------------------------------------
 - actual usable download link on the-cyrus.net
 - fix website text for broader audience
 - on-board welcome content and docs
 - plus on website
 - examples to play with
--------------------------------------------------------


--------------------------------------------------------
Productionise distributed system
 - -----------------------------------------------------
 - all on-device end-user editing
 - -----------------------------------------------------
 - HTTP stuff below
 - run server continuously
 - compress database
 - rotate logs; reduce logs
 - -----------------------------------------------------
 - switchoffable GPS tracking, user->home
 - any efficiency improvements
 - -----------------------------------------------------
 - finish/complete obvious language functions
 - finish obvious set of 2D widgets, including setting vals; make gui format good
 - -----------------------------------------------------
 - accelerometer?
 - avatar chat?
-------------------------------------------------------------------
HTTP
 - server/client up/retry/down/up/retry/down
 - long/short poll; poll while waiting - max-age
 - remove event redundancies; too chatty on the wire
 - detect POST subsumed by c-n - e.g. homeusers
 - multiple POSTs of user
 - FX loop; lost notifications detected
 - 201 Created may be missed
 - 403 if not observing
 - POST response is event targetted at POST request body object
    - or do you put Notify in - not mentioned in FX paper
 - Android radio efficiency http://developer.android.com/training/efficient-downloads/efficient-network-access.html
--------------------------------------------------------


---------------------------------------------------------
Performance
---------------------------------------------------------
 - black screen at startup - using main thread probably
 - speed up ticker and think about observation and smoothing
 - display thread blocked at start so slow to show?
 - fix doCopyOnWrite not to be shite
    - term rewriting, reusing old and adding new; merge rhs with data and reduce, rather than using paths
    - or set flag in JSON to copyonwrite - to assume starting with shared hash and shallow copy from top down to edit
    - if object reads/observes another, grab the public state for that evaluate, don't refetch it and risk inconsistency
 - responsiveness not CPU usage: can use CPU as long as user not busy, so put off on workers
 - check not unresponsive cos of locks
 - light lags massively
 - phone move event takes a while and jumps a lot
 - swipe light toggles on/off; or left/right?
 - slightly crap touch response in game
 - don't need to save to persistence if not changed, and not so often either
 - don't need to spend so much time scanning the scenegraph when only one change
 - redundant rendering/refresh when nothing changed
    - use Etag, if no need to respond to incoming subs
 - stomp out redundancies!
 - cache, and detect changes in components of view - how?
    - share same shaders .. by uid
    - share same meshes? detect internal change
    - share same textures .. by URL
 - alerted on User to determine scene graph change
 - no new VBOs!
    - derivative objects resend VBOs
    - top level mesh not cached
 - memory usage: see video http://www.youtube.com/watch?v=_CruQY55HOk
 - check JSON structure/string cacheing/rebuilding
---------------------------------------------------------



---------------------------------------------------------
Bugs, Refactoring
---------------------------------------------------------
 - tablet start, alt-tab, return, crashes with GL bug (=QemuPipeStream?)
 - touch reaction
    - make multitouch tap less sensitive
    - freeze world on multi
    - leaving two thumbs jumps position
---------------------------------------------------------
 - NaN/Infinity breaking JSON syntax
 - hello world doesn't update immediately cos misses evt & gets out of sync
 - non-cyrus appearing in remote rewrite(?)
 - edit rules still left: if edit rule misses Version, will hang around
 - sort out editable vs updatable:
    - editable means accepts edit rules
    - updateable means accepts other suggestions, such as new list members
    - neither mean that you can change land GPS
    - or are the way to indicate editability of your own objects
    - all your own objects are always directly editable
    - don't need editable/rule if it's your own object!
    - can't allow edit of remote land
 - fix vulnerability of faked POST to our object not theirs
 - shaders: vert and frag should come together, else use basic: why sept?
 - don't fetch remote if it's yours anyway (?)
 - throw if calling certain methods outside of evaluator
--------------------------------------------------------


--------------------------------------------------------
Stuff

 - demos:
    - show how to make a robot in the room entirely on-device
    - Reaktion - show programming it
    - CAP

 - two-pane view/edit on tablet
    - alt-tab on phone reorders history

 - language/naming:
    - reconcile all null, empty tag value or rhs value or $:x, ( ), # use () for #? treat () as # anyway
    - allow type-based overloading of functions and operators? v+v -> +
    - ! val =>  not   val !=>
    - clone: x: => @   x: { UID: => new }
    - (fix content and contentString and contentObject and contentAs*)

 - specify class (e.g. Time/PT) in uid-new?

 - real hardware/bots:
    - API to NXT from Android or on-device
    - BeRo

 - GIS:
    - show within/sub land in different colours
    - don't allow outside of parent area
    - feature overlap rules
    - set 1ha area using trafalgar square
    - delete land
    - more info in map popup
    - scale bar

 - schemes/rules:
    - zeroing rules
    - adjusting constants
    - if scheme detected, flag ineligible
    - suggest scheme and option based on feature, avoiding big-drop-down syndrome
    - EWGS params: species, % cover, planting date
    - ELS; calc points total
    - tree density param may select scheme
    - real data

 - on-device programming VW/GUI
    - link to existing object - chooser? links?
    - show the title next to uid in raw or toast on click
    - undo?
       - if clear, return to original
       - if space, leave as

 - use local uids in topdb.json and convert to generated uids

 - vary denominator with fixed total lights - hide them
    - or light up denominator from 18/24 total lights

 - GUIs
    - gui format
    - see src/server/vm1/static.db res/raw/demodb.json AwayDay examples & src/server/vm[12]/test.db FX/Equity
    - fill in all other form type values
    - cyrus.js vs gui
--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
Prioritising

 - higher priority if showcasing
    - high impact feature or USP
    - next not-done in end-to-end slice
 - higher priority if addressing
    - robustness, performance, refactoring
    - code/implementation unknowns
---------------------------------------------------------
Current priority:

 * Onboard editing - rules of game, create robot, etc

 - shows off USP of ease of programming, object interactivity and learning aspects
 - focus on visible value towards Xmas demo

--------------------------------------------------------
Explore, Interact

1. Initial on-device worldlet to explore and interact with:
   - Open GL ES 2.0: driving GPU
   - lighting
   - JSON scene graph
   - move -vs- interact
   - collisions
   - physics
   - predictive movements - first part of physics

GL basics

 - specular shading
 - IBO flower
 - blending example

Scene Graph creation and navigation

 - set initial view right back/forward behind light
 - convert sphere to mesh
 - is: cube / sphere.obj - no mesh, simpler, easier, quicker
    - is:cube object generates that mesh
    - is:sphere object and mesh - Blender
    - OM: width: [ "=>", "$:within:present", "×", 10 ]
 - circularity detect: why doesn't User presence blow up?
 - put limit on render recursion depth and detect already-rendered-at-xyz
 - teleport position and orientation on back button (save position in history, thus also scroll state)
 - materials map to shaders
 - dynamically edit shaders

Interactions

 - can edit notice by swiping
    - default interaction for notice object is to just set text
    - or scroll by swiping, edit someotherhow
 - move from edge, interact from middle
 - touch state linking to user. as you move, it updates.
   Alerted:
   { is: swipe, user: .., target: .., swipe: [ 1.4, 4.3 ], direction: [ -0.1, 0.23 ] }
    .. accumulated distance / vector from start; current direction vector
   userswipes: +=> Alerted
   [ [ + $:userswipes:swipe:0 ] / [ count $:userswipes ] ] is average of x
   [ [ average $:userswipes:swipe:0 ] ]
 - bumping into something can be an event too, just like swiping
 - attaching accelerometer value to an object: Alerted, then watch user

Physics

 - collision; touch; time; shaders as laws with time, mesh bending
 - walking law to smooth/animate movement if is: avatar
 - racing 'downhill' game - get on track; physics

Other

 - texture per face as extra arg: use list not string
 - remove rest of mesh and gui nesting: easier to read and faster to draw

Pre-Edit

 - can have non-edit interactions that have same effect: minecrafting, dupe

--------------------------------------------------------
Edit

2. IDE to edit worldlet Object Network and Object Mash: edit obnet/copy/link, edit obmash; two-pane edit

--------------------------------------------------------
 - pop-up kbd
    - http://stackoverflow.com/questions/10432763/showing-software-keyboard-with-glsurfaceview-and-getting-input-from-it
    - http://forum.xda-developers.com/showthread.php?t=860488
    - add title to notice text
---------------------------------------------------------
 - edit brings up single param panel at first: text mesh in HUD (tag:val text)
 - swipe it right to edit, then up/down to adjust
 - all local but still needs to be fast
 - either change directly if own/local, or send rule if remote
 - need to fix editing-rule stuff: use etag, etc
---------------------------------------------------------

In-World Object/Net/Mash: the Object-Net/Mash Instant 3D IDE!

 - multitouch swipe to edit
    - structure panel, vertical swipe to scroll
    - can swipe left to scroll through net and mash panes stacked
    - right-swipe a field to edit
       - if scalar, up/down adjusts; if text, kbd
       - if rgb, chooser, if date, calendar, etc
       - if hash/list, can add new or duplicate or delete
       - if link, can copy, choose from 'clipboard'
       - if new object, new 'is' gives prepopulated
    - dupe subobject hash links to same, then swipe it apart
    - or dupe whole object
    - knowing type means intelligent edit, including of rules

IDE stuff

 - arrive at own on-board room: build interactive objects like the ones already dotted around
 - onboard and online objects for faster editing responses and rule exec, at least while building IDE

 - in-world clone, link, drop ..  see jxee/u-web std edit options
 - multitouch swipe for edit menu (clone/link - add to selection list, drop from sel list, delete back to sel list, edit obj, edit rules)

 - it's an IDE. But the code is already structured.
    - it's graph/tree reduction/rewriting
    - an IDE that extends beyond the team into the world..
 - knowing type means can autocomplete and offer appropriate edit widgets (date, colour, ..)
    - constraints of JSON needn't be at all visible in gui
    - smooths over ugliness: %, "", etc
 - render a rule nicely: [ width: | => | $:within:present | × | 10 ] with colouring => and rhs
    - render rules specially as recognised type
    - render JSON as recognised ObNet type: Rules, More, is, etc known
    - colour syntax highlighting
 - show how lists and singles are treated the same somehow
 - split-screen and/or easy-flip: Object, Object Net, Object Mash
    - this has to be really easy and nice to use
    - it's an IDE like Victor .. Light Table
    - visual instantiation of rules - step through, see each rule firing and rewriting
    - Code Bubbles: http://www.youtube.com/watch?v=PsPX0nElJ0k
 - touch 3D object brings up menu with go to Object/Net/Mash views options
 - start with object itself as new rule
    - then autocomplete options
    - can expand links inline to full nested object
    - expand sub-linked objects, so easy to build link-jumping rule
 - rescaling number chooser .. 10, 100, 1000 new scale set
 - fix view/edit not to use nested views:
    - hierarchyviewer, dmtracedump http://stackoverflow.com/questions/5377445/which-order-of-nested-layouts-is-most-efficient-in-android

Object Mash

 - see *.txt
 - test-drive required functionality

--------------------------------------------------------
Share

3. Sharing your worldlet online

Speed, Bugfixes, Robustness, Clean formats

 - avatar chat, "saying": ".."
 - avatar POSTs rotations

-------------------------------------------------------------------
HTTP

 - need to hang POST responses so not POST requests; should be 204
    - actually this is long-polling GET for C-N=object URL not cache
 - match to uid not URL - e.g when fetch 192.168.. and C-L set to 10.0.2.2
 - still two network conns on main thread: at start and images
 - HTTP.java longPollerPool concurrentmod.txt

FuncObs 

 - make etag increment atomic with state change - put all in '%'s?
 - allow relative links
 - option to bail via exception if observed object not there

Overall

 - tighten up thread syncing

Types

 - queryable not searchable
 - always roundtrip extra tags in queryable
 - preview (?) not summary?

Build

 - http://stackoverflow.com/questions/5334399/automation-for-android-release-build

Android

 - http://www.infoq.com/news/2012/04/AQuery

Stuff 

 - hello world stdio interface object - user object on command line

-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------

