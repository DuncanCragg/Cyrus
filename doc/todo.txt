
To Do
-----

--------------------------------------------------------
Prioritising

 - higher priority if showcasing
    - high impact feature or USP
    - next not-done in end-to-end slice
 - higher priority if addressing
    - robustness, performance, refactoring
    - code/implementation unknowns

Current priority: (vim/raw-edited for now) rules for puzzle room

 - shows off USP of ease of programming, object interactivity and learning aspects
 - done some refactoring, need to focus on visible value towards Xmas demo

--------------------------------------------------------
Stuff
--------------------------------------------------------
 - get GUIs working
    - gui format
    - see src/server/vm1/static.db res/raw/demodb.json AwayDay examples & src/server/vm[12]/test.db FX/Equity
    - fill in form values
 - local uids in topdb.json converted to generated uids
---------------------------------------------------------
 - 3x4 grid, smaller lights
 - fraction not number
 - random refactoring of number
 - vary denominator with fixed total lights - hide them
---------------------------------------------------------
Performance, Bugs
---------------------------------------------------------
 - don't fetch remote if it's yours anyway (?)
 - can't allow edit of remote land
 - don't need editable/rule if it's your own object!
 - check JSON structure/string cacheing/rebuilding
---------------------------------------------------------
 - wrong object detected on tablet
 - light lags massively
 - cache, and detect changes in components of view - how?
    - share same shaders .. by uid
    - share same meshes? detect internal change
    - share same textures .. by URL
 - no new VBOs!
    - derivative objects resend VBOs
    - top level mesh not cached
 - redundant rendering/refresh when nothing changed
    - use Etag, if no need to respond to incoming subs
 - jump link, split path is big cpu user
 - SomeObject/Avatar still?
 - shaders: vert and frag should come together, else use basic: why sept?
 - memory usage: see video http://www.youtube.com/watch?v=_CruQY55HOk
 - fix vulnerability of faked POST to our object not theirs
 - light on Kis - mystery
--------------------------------------------------------
Explore, Interact

1. Initial on-device worldlet to explore and interact with: Open GL ES 2.0: driving GPU, lighting, JSON scene graph, move -vs- interact, collisions, physics

GL basics

 - specular shading
 - IBO flower
 - blending example

Scene Graph creation and navigation

 - set initial view right back/forward behind light
 - convert sphere to mesh
 - is: cube / sphere.obj - no mesh, simpler, easier, quicker
    - is:cube object generates that mesh
    - is:sphere object and mesh - Blender
    - OM: width: [ "=>", "$:place:present", "×", 10 ]
 - circularity detect: why doesn't User presence blow up?
 - put limit on render recursion depth and detect already-rendered-at-xyz
 - teleport coords and orientation on back button (save coords in history, thus also scroll state)
 - materials map to shaders

Interactions

 - can edit notice by swiping
    - default interaction for notice object is to just set text
    - or scroll by swiping, edit someotherhow
 - move from edge, interact from middle
 - touch state linking to user. as you move, it updates.
   %alerted:
   { is: swipe, user: .., target: .., swipe: [ 1.4, 4.3 ], direction: [ -0.1, 0.23 ] }
    .. accumulated distance / vector from start; current direction vector
   userswipes: +=> %alerted
   [ [ + $:userswipes:swipe:0 ] / [ count $:userswipes ] ] is average of x
   [ [ average $:userswipes:swipe:0 ] ]
 - bumping into something can be an event too, just like swiping
 - attaching accelerometer value to an object: %alerted, then watch user

Physics

 - collision; touch; time; shaders as laws with time, mesh bending
 - walking law to smooth/animate movement if is: avatar

Examples dotted around on arrival

 - lights that change when you swipe them
 - some rotate on swipe, some open/close, some scroll thru gallery of pix
 - lights come on when you enter that part of map
 - point lights, blended transparent, simple colour vert interpolated cubes, etc
 - curved shape from android tutorial made into flower
 - rover roving
 - accelerometer-based interactions and games like teeter - pick up a wooden toy
 - racing 'downhill' game - get on track; physics
 - Minecraft: pick up/put down interaction as part of normal object interaction/behaviour

Other

 - texture per face as extra arg: use list not string
 - remove rest of mesh and gui nesting: easier to read and faster to draw

Pre-Edit

 - can have non-edit interactions that have same effect: minecrafting, dupe

--------------------------------------------------------
Edit

2. IDE to edit worldlet Object Network and Object Mash: edit obnet/copy/link, edit obmash; two-pane edit

--------------------------------------------------------
 - pop-up kbd
    - http://stackoverflow.com/questions/10432763/showing-software-keyboard-with-glsurfaceview-and-getting-input-from-it
    - http://forum.xda-developers.com/showthread.php?t=860488
    - add title to notice text
---------------------------------------------------------
 - edit brings up single param panel at first: text mesh in HUD (tag:val text)
 - swipe it right to edit, then up/down to adjust
 - all local but still needs to be fast
 - need to fix editing-rule stuff
---------------------------------------------------------

In-World Object/Net/Mash: the Object-Net/Mash Instant 3D IDE!

 - multitouch swipe to edit
    - structure panel, vertical swipe to scroll
    - can swipe left to scroll through net and mash panes stacked
    - right-swipe a field to edit
       - if scalar, up/down adjusts; if text, kbd
       - if rgb, chooser, if date, calendar, etc
       - if hash/list, can add new or duplicate or delete
       - if link, can copy, choose from 'clipboard'
       - if new object, new 'is' gives prepopulated
    - dupe subobject hash links to same, then swipe it apart
    - or dupe whole object
    - knowing type means intelligent edit, including of rules

IDE stuff

 - arrive at own on-board room: build interactive objects like the ones already dotted around
 - onboard and online objects for faster editing responses and rule exec, at least while building IDE

 - in-world clone, link, drop ..  see jxee/u-web std edit options
 - multitouch swipe for edit menu (clone/link - add to selection list, drop from sel list, delete back to sel list, edit obj, edit rules)

 - it's an IDE. But the code is already structured.
    - it's graph/tree reduction/rewriting
    - an IDE that extends beyond the team into the world..
 - knowing type means can autocomplete and offer appropriate edit widgets (date, colour, ..)
    - constraints of JSON needn't be at all visible in gui
    - smooths over ugliness: %, "", etc
 - render a rule nicely: [ width: | => | $:place:present | × | 10 ] with colouring => and rhs
    - render rules specially as recognised type
    - render JSON as recognised ObNet type: %rules, %more, is, etc known
 - show how lists and singles are treated the same somehow
 - split-screen and/or easy-flip: Object, Object Net, Object Mash
    - this has to be really easy and nice to use
    - it's an IDE like Victor .. Light Table
    - visual instantiation of rules - step through, see each rule firing and rewriting
    - Code Bubbles: http://www.youtube.com/watch?v=PsPX0nElJ0k
 - touch 3D object brings up menu with go to Object/Net/Mash views options
 - start with object itself as new rule
    - then autocomplete options
    - can expand links inline to full nested object
    - expand sub-linked objects, so easy to build link-jumping rule
 - rescaling number chooser .. 10, 100, 1000 new scale set
 - fix view/edit not to use nested views:
    - hierarchyviewer, dmtracedump http://stackoverflow.com/questions/5377445/which-order-of-nested-layouts-is-most-efficient-in-android

Object Mash

 - see *.txt
 - test-drive required functionality

--------------------------------------------------------
Share

3. Sharing your worldlet online

Speed, Bugfixes, Robustness, Clean formats

 - remove event redundancies
 - client and server cycling and long/short poll
 - too chatty on the wire
 - think about multiple POSTs of user
 - avatar chat, "saying": ".."
 - avatar POSTs rotations

HTTP
 - match to uid not URL - e.g when fetch 192.168.. and C-L set to 10.0.2.2
 - still two network conns on main thread: at start and images
 - 201 Created may be missed
 - 403 if not observing
 - poll while waiting - max-age
 - need to hang POST responses so not POST requests; should be 204
    - actually this is long-polling GET for C-N=object URL not cache
 - detect POST subsumed by c-n - e.g. homeusers


-------------------------------------------------------------------


Android

 - http://www.infoq.com/news/2012/04/AQuery
 - Android radio efficiency http://developer.android.com/training/efficient-downloads/efficient-network-access.html

Stuff 

 - hello world stdio interface object - user object on command line

FuncObs 

 - make etag increment atomic with state change - put all in '%'s?
 - allow relative links
 - option to bail via exception if observed object not there

Overall

 - tighten up thread syncing
 - HTTP.java longPollerPool concurrentmod.txt

Types

 - queryable not searchable
 - always roundtrip extra tags in queryable
 - preview (?) not summary?


Build

 - http://stackoverflow.com/questions/5334399/automation-for-android-release-build




