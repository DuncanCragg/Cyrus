
To Do
-----

--------------------------------------------------------
Explore, Interact

1. Initial on-device worldlet to explore and interact with: Open GL ES 2.0: driving GPU, lighting, JSON scene graph, collisions, physics, move -vs- interact

Get GL basics right: see WebGL tutorials

 - efficiency in Render as in comments
 - materials
 - lighting all wrong: model, camera, lightpos needs sorting
 - texture per face as extra arg: use list not string
 - projection not re-setting properly on landscape
 - remove rest of mesh and gui nesting: easier to read and faster to draw

Scene Graph creation and navigation

 - circularity detect: why doesn't User presence blow up?
 - put limit on render recursion depth and detect already-rendered-at-xyz
 - teleport coords and orientation on back button (save coords in history, thus also scroll state)
 - is: cube / sphere.obj - no mesh, simpler, easier, quicker
    - is:cube object generates that mesh
    - is:sphere object and mesh - Blender
    - OM: width: [ "=>", "$:place:present", "×", 10 ]

Interactions

 - move from edge, interact from middle
 - interact using touch detection render trick
 - touch state linking to user. as you move, it updates.
   %alerted:
   { is: stroke, user: .., target: .., stroke: [ 1.4, 4.3 ], direction: [ -0.1, 0.23 ] }
    .. accumulated distance / vector from start; current direction vector
   userstrokes: +=> %alerted
   [ [ + $:userstrokes:stroke:0 ] / [ count $:userstrokes ] ] is average of x
 - bumping into something can be an event too, just like stroking
 - attaching accelerometer value to an object: %alerted, then watch user

Physics

 - collision; touch; time; shaders as laws with time, mesh bending
 - walking law to smooth/animate movement if is: avatar

Examples dotted around on arrival

 - lights that change when you swipe them
 - some rotate on swipe, some open/close, some scroll thru gallery of pix
 - lights come on when you enter that part of map

--------------------------------------------------------
Edit

2. IDE to edit worldlet Object Network and Object Mash: edit obnet/copy/link, edit obmash; two-pane edit

Object/Net/Mash views: the Object-Net/Mash IDE

 - arrive at own on-board room: build interactive objects like the ones already dotted around
 - onboard and online objects for faster editing responses and rule exec, at least while building IDE

 - in-world clone, link, drop ..  see jxee/u-web std edit options
 - multitouch stroke for edit menu (clone/link - add to selection list, drop from sel list, delete back to sel list, edit obj, edit rules)

 - it's an IDE. But the code is already structured.
    - it's graph/tree reduction/rewriting
    - an IDE that extends beyond the team into the world..
 - render a rule nicely: [ width: | => | $:place:present | × | 10 ] with colouring => and rhs
    - render rules specially as recognised type
    - render JSON as recognised ObNet type: %rules, %more, is, etc known
    - constraints of JSON needn't be at all visible in gui
    - smooths over ugliness: %, "", etc
 - split-screen and/or easy-flip: Object, Object Net, Object Mash
    - this has to be really easy and nice to use
    - it's an IDE like Victor .. Light Table
    - visual instantiation of rules - step through, see each rule firing and rewriting
 - touch 3D object brings up menu with go to Object/Net/Mash views options
 - expand sub-linked objects, so easy to build link-jumping rule
 - start with object itself as new rule
    - then autocomplete options
    - can expand links inline to full nested object
 - show how lists and singles are treated the same somehow
 - rescaling number chooser .. 10, 100, 1000 new scale set
 - fix view/edit not to use nested views: HTML WebView and object-mash.js
    - HTML is probably most flexible
    - hierarchyviewer, dmtracedump http://stackoverflow.com/questions/5377445/which-order-of-nested-layouts-is-most-efficient-in-android
    - JSON view renders three times - use Etag, if no need to respond to incoming subs

Text render/enter - maybe have 3D Net/Mash views

 - render text fonts:
    - http://fractiousg.blogspot.co.uk/2012/04/rendering-text-in-opengl-on-android.html
 - keyboard input:
    - http://stackoverflow.com/questions/10432763/showing-software-keyboard-with-glsurfaceview-and-getting-input-from-it
    - http://forum.xda-developers.com/showthread.php?t=860488
 - needs touch detection, which is needed anyway

Object Mash

 - see *.txt
 - test-drive required functionality

--------------------------------------------------------
Share

3. Sharing your worldlet online

Speed, Bugfixes, Robustness, Clean formats

 - avatar chat, "saying": ".."
 - avatar POSTs rotations
 - remove event redundancies
 - ?? GC_CONCURRENT freed 513K, 12% free 8020K/9031K, paused 1ms+2ms, total 21ms
 - client and server cycling and long/short poll
 - too chatty on the wire
 - think about multiple POSTs of user

HTTP
 - match to uid not URL - e.g when fetch 192.168.. and C-L set to 10.0.2.2
 - still two network conns on main thread: at start and images
 - 201 Created may be missed
 - 403 if not observing
 - poll while waiting - max-age
 - need to hang POST responses so not POST requests; should be 204
    - actually this is long-polling GET for C-N=object URL not cache


-------------------------------------------------------------------


Android

 - http://www.infoq.com/news/2012/04/AQuery
 - Android radio efficiency http://developer.android.com/training/efficient-downloads/efficient-network-access.html

Stuff 

 - hello world stdio interface object - user object on command line

FuncObs 

 - make etag increment atomic with state change - put all in '%'s?
 - allow relative links
 - option to bail via exception if observed object not there

Overall

 - tighten up thread syncing
 - HTTP.java longPollerPool concurrentmod.txt

Types

 - queryable not searchable
 - always roundtrip extra tags in queryable
 - preview (?) not summary?






